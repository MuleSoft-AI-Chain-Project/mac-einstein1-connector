<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:ms-einstein="http://www.mulesoft.org/schema/mule/ms-einstein"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/ms-einstein http://www.mulesoft.org/schema/mule/ms-einstein/current/mule-ms-einstein.xsd">

    <munit:config name="GenerationsOperationTestCase.xml"/>

    <munit:test name="ChatWithPrompt">
        <munit:execution>
            <logger message="Test ChatWithPrompt started" level="INFO"/>
            <munit:set-event doc:name="Set Event" doc:id="1c45d3f8-1234-5678-9abc-01234def6789">
                <munit:payload value='#[{"prompt": "How many continents are there in the world, give answer in one word only ?"}]'/>
            </munit:set-event>
            <ms-einstein:chat-answer-prompt doc:name="Chat answer prompt" doc:id="5f8c7c79-dffe-4331-a5b4-30375baa66bc"
                                            config-ref="Agentforce_Config">
                <ms-einstein:prompt>#[payload.prompt]</ms-einstein:prompt>
            </ms-einstein:chat-answer-prompt>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload.response]"
                                     is="#[MunitTools::matches('.*(7|seven|Seven).*')]"
                                     doc:name="Assert Generated Text"/>
        </munit:validation>
    </munit:test>


    <munit:test name="ChatGenerateFromMessages">
        <munit:execution>
            <logger message="Test ChatGenerateFromMessages started" level="INFO"/>
            <munit:set-event doc:name="Set Event" doc:id="1c45d3f8-1234-5678-9abc-01234def6789">
                <munit:payload
                        value="#[{messages:[{role: 'user', content: 'Can you give me a recipe for classic cherry pie?'}]}]"/>
            </munit:set-event>
            <ms-einstein:chat-generate-from-messages doc:name="Chat generate from messages"
                                                     doc:id="5f8c7c79-dffe-4331-a5b4-30375baa66bc"
                                                     config-ref="Agentforce_Config">
                <ms-einstein:messages>#[write(payload.messages, 'application/json')]</ms-einstein:messages>
            </ms-einstein:chat-generate-from-messages>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that
                    expression="#[payload.generations[0].content]"
                    is="#[MunitTools::containsString('cherry pie')]"
                    doc:name="Assert that content includes a recipe for cherry pie"/>
        </munit:validation>
    </munit:test>

    <munit:test name="CHATAnswerPromptWithMemory" description="Test chat answer with memory">
        <munit:execution>
            <logger message="Test CHATAnswerPromptWithMemory started" level="INFO"/>
            <flow-ref name="ask-question-flow" doc:name="Invoke Ask Question Flow"/>
        </munit:execution>

        <munit:validation>
            <munit-tools:assert-that
                    expression="#[lower(payload.response)]"
                    is="#[MunitTools::matches('.*(ostrich|Ostrich).*')]"
                    doc:name="Assert that the response mentions Ostrich"/>
        </munit:validation>
    </munit:test>

    <munit:test name="AgentDefinePromptTemplate" description="Test define agent prompt template">
        <munit:behavior>
            <munit:set-event doc:name="Set Input" doc:id="01b3a666-0856-440c-a499-c1374896a95b">
                <munit:payload value="#[output application/json --- {
                'template': 'You are a customer satisfaction agent, who analyses the customer feedback in the dataset Answer via json output and add type for the result only with positive or negative as well as the complete answer.',
                'instructions': 'If the customer feedback in the dataset is negative, open service satisfaction case and apologize to the customer. If the customer feedback in the dataset is positive, thank the customer and wish them a nice day. Don\'t repeat the feedback and be more direct starting the conversation with formal greetings.',
                'dataset': 'It was horrible training last week'
            }]" encoding="UTF-8" mediaType="application/json"/>
            </munit:set-event>
        </munit:behavior>
        <munit:execution>
            <logger message="Test AgentDefinePromptTemplate started" level="INFO"/>
            <ms-einstein:agent-define-prompt-template doc:name="agent define prompt template"
                                                      config-ref="Agentforce_Config">
                <ms-einstein:template>
                    #[payload.template]
                </ms-einstein:template>
                <ms-einstein:instructions>
                    #[payload.instructions]
                </ms-einstein:instructions>
                <ms-einstein:dataset>
                    #[payload.dataset]
                </ms-einstein:dataset>
            </ms-einstein:agent-define-prompt-template>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that
                    expression="#[payload != null and payload.response != null and payload.response != '']"
                    is="#[MunitTools::equalTo(true)]"
                    doc:name="Validate Generated Text is Not Null or Blank"/>
        </munit:validation>
    </munit:test>

    <munit:test name="AgentforceWithError" description="Test to validate error"
                expectedErrorType="ms-einstein:CONNECTIVITY">
        <munit:behavior>
            <munit:set-event doc:name="Set Input" doc:id="01b3a666-0856-440c-a499-c1374896a95b">
                <munit:payload value="#[output application/json --- {
                'template': 'You are a customer satisfaction agent, who analyses the customer feedback in the dataset Answer via json output and add type for the result only with positive or negative as well as the complete answer.',
                'instructions': 'If the customer feedback in the dataset is negative, open service satisfaction case and apologize to the customer. If the customer feedback in the dataset is positive, thank the customer and wish them a nice day. Don\'t repeat the feedback and be more direct starting the conversation with formal greetings.',
                'dataset': 'It was horrible training last week'
            }]" encoding="UTF-8" mediaType="application/json"/>
            </munit:set-event>
        </munit:behavior>
        <munit:execution>
            <logger message="Test AgentforceWithError started" level="INFO"/>
            <ms-einstein:agent-define-prompt-template doc:name="agent define prompt template"
                                                      config-ref="Agentforce_Config_Error">
                <ms-einstein:template>
                    #[payload.template]
                </ms-einstein:template>
                <ms-einstein:instructions>
                    #[payload.instructions]
                </ms-einstein:instructions>
                <ms-einstein:dataset>
                    #[payload.dataset]
                </ms-einstein:dataset>
            </ms-einstein:agent-define-prompt-template>
        </munit:execution>
    </munit:test>

</mule>
